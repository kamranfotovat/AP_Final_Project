@* File: Views/Account/SelectRole.cshtml *@
@model GolestanProject.ViewModels.SelectRoleViewModel 
@{
    ViewData["Title"] = "Select Role";
}

<div class="text-center">
    <h1 class="display-4">Select Your Role & Account</h1>

    @* Display TempData error messages, if any *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    @* Display validation errors from ModelState, if any *@
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var entry in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@entry.ErrorMessage</li>
                }
            </ul>
        </div>
    }


    <form asp-action="SelectRole" method="post"> @* asp-action should match the POST action method name in your AccountController *@
        <div class="form-group">
            @* Check if there are any available role accounts to display *@
            @if (Model.AvailableRoleAccounts != null && Model.AvailableRoleAccounts.Any())
            {
                <p>Please select your role and account:</p>
                @foreach (var item in Model.AvailableRoleAccounts) @* Iterate over the list from your ViewModel *@
                {
                    <div class="form-check">
                        <input type="radio"
                               id="@item.UniqueId" @* Use UniqueId for the HTML element ID *@
                               name="SelectedUniqueId" @* CRITICAL: 'name' must match the property in your ViewModel that receives the selected value *@
                               value="@item.UniqueId" @* The value to be sent to the controller when this radio button is selected *@
                               class="form-check-input"
                               checked="@(item.UniqueId == Model.SelectedUniqueId)" /> @* Optional: This keeps the radio button checked if the form is reloaded due to a validation error *@
                        <label class="form-check-label" for="@item.UniqueId">
                            @item.DisplayText @* Display the formatted text for the user *@
                        </label>
                    </div>
                }
            }
            else
            {
                <p class="alert alert-warning">No roles or accounts found for your user. Please contact support.</p>
            }
        </div>
        <button type="submit" class="btn btn-primary mt-3">Continue</button>
    </form>
    <div class="mt-3">
        <a asp-action="Logout" asp-controller="Account" class="btn btn-secondary">Logout</a>
    </div>
</div>